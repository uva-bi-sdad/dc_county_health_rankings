# Hello, world!
#
# This is an example function named 'hello'
# which prints 'Hello, world!'.
#
# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'

set_data_file_urls <- function(state = "Virginia") {
  data.table::data.table(
    year = c("2015", "2016", "2017", "2018", "2019", "2020", "2021"),
    url = c(paste0("https://www.countyhealthrankings.org/sites/default/files/media/document/state/downloads/2015%20County%20Health%20Rankings%20", state, "%20Data%20-%20v3.xls"),
            paste0("https://www.countyhealthrankings.org/sites/default/files/media/document/state/downloads/2016%20County%20Health%20Rankings%20", state, "%20Data%20-%20v3.xls"),
            paste0("https://www.countyhealthrankings.org/sites/default/files/media/document/state/downloads/2017%20County%20Health%20Rankings%20", state, "%20Data%20-%20v2.xls"),
            paste0("https://www.countyhealthrankings.org/sites/default/files/media/document/state/downloads/2018%20County%20Health%20Rankings%20", state, "%20Data%20-%20v3.xls"),
            paste0("https://www.countyhealthrankings.org/sites/default/files/media/document/state/downloads/2019%20County%20Health%20Rankings%20", state, "%20Data%20-%20v1_0.xls"),
            paste0("https://www.countyhealthrankings.org/sites/default/files/media/document/2020%20County%20Health%20Rankings%20", state, "%20Data%20-%20v1_0.xlsx"),
            paste0("https://www.countyhealthrankings.org/sites/default/files/media/document/2021%20County%20Health%20Rankings%20", state, "%20Data%20-%20v1_0.xlsx"))
  )
}

get_data_columns <-
  function(years = c("2021"),
           data_types = c("Ranked Measure Data", "Additional Measure Data")) {
    data_file_urls <- set_data_file_urls()

    data_columns <- data.table::data.table(
      Category = character(),
      Variable = character(),
      Column = character(),
      Year = character(),
      DataType = character()
    )

    for (y in years) {
      for (t in data_types) {
        url <- data_file_urls[year == y, url]

        dt_2r <-
          data.table::setDT(
            openxlsx::read.xlsx(url,
                                sheet = t,
                                colNames = FALSE,
                                startRow = 1,
                                rows = c(1,2)
            )
          )
        dt_2r_t <- data.table::as.data.table(t(dt_2r))
        dt_2r_t[1, V1 := "Geographic identifiers"]
        dt_2r_t[, V3 := .I]
        dt_2r_t[, V4 := y]
        dt_2r_t[, V5 := t]

        measure_nas <- which(is.na(dt_2r_t$V1))
        measure_rows <- nrow(dt_2r_t)
        for (i in 1:measure_rows) {
          if (!i %in% measure_nas) {
            curr_idx <- i
            #print(introduction$Measure[curr_idx])
          } else {
            dt_2r_t[i, V1 := dt_2r_t[curr_idx, V1]]
            #print(introduction$Measure[curr_idx])
          }
        }
        colnames(dt_2r_t) <- c("Category", "Variable", "Column", "Year", "DataType")
        data_columns <- data.table::rbindlist(list(data_columns, dt_2r_t))
      }
    }
    data_columns
  }




get_data <- function(year = "2021",
                     data_type = "Ranked Measure Data",
                     columns = c(127,128)) {
  data_file_urls <- set_data_file_urls()
  yr <- year
  url <- data_file_urls[year == yr, url]

  dt_cols <- get_data_columns()

  dt <-
    data.table::setDT(
      openxlsx::read.xlsx(url,
        sheet = data_type,
        colNames = FALSE,
        startRow = 3,
        cols = unique(c(1,2,3,columns))
      )
    )
  colnames(dt) <- dt_cols[DataType==data_type,][unique(c(1,2,3,columns)), paste(Category, "-", Variable)]
  dt
}

my_data <- get_data()









